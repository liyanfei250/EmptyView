apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def $version_Code = 22022801
def $version_Name = "1.0.0"

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode $version_Code
        versionName $version_Name
        sourceSets {
            //设置kotlin文件夹
            main.java.srcDirs += 'src/main/kotlin'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.7.20'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.20'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompileProvider
    task.from variant.javaCompileProvider.get().destinationDir
    artifacts.add('archives', task)
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.sungrowpower.sgkit'
            version = android.defaultConfig.versionName
            artifactId project.getName()
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact sourcesJar

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    // 如果有compile fileTree()，group会为空，需要去除
                    if (it.group != null) {
                        def dependency = dependencies.appendNode('dependency')
                        dependency.appendNode('groupId', it.group)
                        dependency.appendNode('artifactId', it.name)
                        dependency.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = "http://app.sungrow.cn:8081"
    publish {
        repository {
            repoKey = "local"
            username = "admin"
            password = "sungrow12345"
        }
        defaults {
            publications('aar')
            publishArtifacts = true
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            publishPom = true
        }
    }

    // 执行脚本 gradle assembleRelease artifactoryPublish
    // gradlew :isolarui:assembleRelease
    // gradlew :isolarui:artifactoryPublish
}

